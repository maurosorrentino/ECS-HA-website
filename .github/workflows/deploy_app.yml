name: Build and Deploy to ECS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-west-1
  ECR_REPO_BACKEND: my-backend-repo
  ECR_REPO_FRONTEND: my-frontend-repo
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE_BACKEND: my-backend-service
  ECS_SERVICE_FRONTEND: my-frontend-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Backend image
        run: |
          BACKEND_TAG=${{ github.sha }}
          docker build -t $ECR_REPO_BACKEND:$BACKEND_TAG app/backend
          docker tag $ECR_REPO_BACKEND:$BACKEND_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_BACKEND}:$BACKEND_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_BACKEND}:$BACKEND_TAG
          echo "BACKEND_IMAGE=${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_BACKEND}:$BACKEND_TAG" >> $GITHUB_ENV

      - name: Build and push Frontend image
        run: |
          FRONTEND_TAG=${{ github.sha }}
          docker build -t $ECR_REPO_FRONTEND:$FRONTEND_TAG app/frontend
          docker tag $ECR_REPO_FRONTEND:$FRONTEND_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_FRONTEND}:$FRONTEND_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_FRONTEND}:$FRONTEND_TAG
          echo "FRONTEND_IMAGE=${{ steps.login-ecr.outputs.registry }}/${ECR_REPO_FRONTEND}:$FRONTEND_TAG" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Terraform init
        working-directory: infra
        run: terraform init

      - name: Terraform apply
        working-directory: infra
        env:
          TF_VAR_backend_image: ${{ env.BACKEND_IMAGE }}
          TF_VAR_frontend_image: ${{ env.FRONTEND_IMAGE }}
        run: terraform apply -auto-approve
